---
server:
  port: ${port:8000}

spring:
  main:
    web-application-type: reactive
  codec:
    max-in-memory-size: 500KB
  application:
    name: "@project.artifactId@"
    description: "@project.name@"
  build:
    version: "@project.version@"
  jackson:
    default-property-inclusion: NON_NULL
    deserialization:
      fail-on-unknown-properties: false
  datasource:
    driverClassName: org.postgresql.Driver
    url: ${DB_URL:jdbc:postgresql://localhost:5432/vortex}
    username: ${DB_USERNAME:postgresql}
    password: ${DB_PASSWORD:password}
    hikari:
      pool-name: hikari-platform-service-platform
      connection-test-query: SELECT 1
      maximum-pool-size: 50
      max-lifetime: 600000
      connection-timeout: 60000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    database: POSTGRESQL
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC
  flyway:
    baseline-on-migrate: true
    enabled: false
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: ${app.gateway.cors.allowed-origins}
            allowedHeaders: "*"
            allowedMethods:
              - GET
              - POST
              - DELETE
              - PUT
              - OPTIONS
      routes:
        - id: downstream-api
          uri: ${app.gateway.downstream.base-url}
          predicates:
            - Path=${app.gateway.downstream.path-prefix}/**
          filters:
            - RewritePath=${app.gateway.downstream.path-prefix}/(?<path>.*), /$\{path}
            - RemoveRequestHeader=Authorization
            - name: SetAPIKey
              args:
                keyName: Authorization
                adminKey: Bearer ${app.gateway.downstream.admin-api-key}
                userKey: Bearer ${app.gateway.downstream.user-api-key}
management:
  endpoint:
    health:
      show-details: ALWAYS
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,prometheus
info:
  app:
    encoding: "@project.build.sourceEncoding@"
    java:
      source: "@java.version@"
      target: "@java.version@"

springdoc:
  show-actuator: true
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    supported-submit-methods: [ "get", "post", "patch", "delete" ]
    config-url: /v3/api-docs/swagger-config
    urls:
      - url: /v3/api-docs
        name: Vortex API
  servers:
    - url: http://localhost:8000
      description: localhost
reactor:
  netty:
    http:
      client:
        secure:
          logging:
            maskedHeaders: Authorization
logging:
  level:
    com.consoleconnect.vortex: DEBUG
    org.springframework.security: DEBUG
    org.springframework.cloud.gateway: DEBUG


app:
  iam:
    auth0:
      mgmt-api:
        domain: ${IAM_AUTH0_MGMT_API_DOMAIN:consoleconnect.auth0.com}
        client-id: ${IAM_AUTH0_MGMT_API_CLIENT_ID:mgmt-api-client-id}
        client-secret: ${IAM_AUTH0_MGMT_API_CLIENT_SECRET:mgmt-api-client-secret}
        audience: ${IAM_AUTH0_MGMT_API_AUDIENCE:https://partner.consoleconnect.com/api}
      app:
        client-id: ${IAM_AUTH0_APP_CLIENT_ID:app-client-id}
      mgmt-org-id: ${IAM_AUTH0_MGMT_ORG_ID:}
    email:
      enabled: ${IAM_EMAIL_ENABLED:false}
      provider: ${IAM_EMAIL_PROVIDER:sendgrid}
      send-grid:
        api-key: ${SENDGRID_API_KEY:}
        from:
          name: ${SENDGRID_FROM_NAME:}
          email: ${SENDGRID_FROM_EMAIL:}
        templates:
          invite-org-member: ${SENDGRID_TEMPLATE_ID_ORG_INVITE:}
    resource-server:
      trusted-issuers:
        - issuer: ${IAM_RESOURCE_SERVER_TRUSTED_ISSUER_MGMT:https://login.consoleconnect.com/}
          mgmt: true
          default-roles:
            - PLATFORM_ADMIN
        - issuer: ${IAM_RESOURCE_SERVER_TRUSTED_ISSUER_CUSTOMER:https://vortex.au.auth0.com/}
          default-roles:
            - ORG_MEMBER
      path-permissions:
        - path: /mgmt/**
          http-methods:
            - POST
            - DELETE
            - PATCH
          roles:
            - PLATFORM_ADMIN
        - path: /mgmt/**
          http-methods:
            - GET
          roles:
            - PLATFORM_ADMIN
            - PLATFORM_MEMBER
        - path: /organization/**
          http-methods:
            - POST
            - PATCH
            - DELETE
          roles:
            - ORG_ADMIN
        - path: /organization/**
          http-methods:
            - GET
          roles:
            - ORG_ADMIN
            - ORG_MEMBER
    downstream:
      base-url: ${GATEWAY_DOWN_STREAM_BASE_URL:http://localhost:3000}
      admin-api-key-name: Authorization
      admin-api-key: Bearer ${GATEWAY_DOWN_STREAM_ADMIN_API_KEY:api-key-has-admin-role}
      role: ${IAM_DOWN_STREAM_VORTEX_ROLE:VORTEX_ADMIN}
      company-username: ${IAM_DOWN_STREAM_COMPANY_USERNAME:test}
      role-endpoint: ${IAM_DOWN_STREAM_ROLE_PATH:/api/company/%s/memberships/%s/roles/%s}
    platform-admins:
      - 5ec4d3765cf0a1001486b95d
  gateway:
    cors:
      allowed-origins: ${GATEWAY_CORS_ALLOWED_ORIGINS:*}
    downstream:
      base-url: ${GATEWAY_DOWN_STREAM_BASE_URL:http://localhost:3000}
      path-prefix: ${GATEWAY_DOWN_STREAM_PATH_PREFIX:/downstream}
      admin-api-key: ${GATEWAY_DOWN_STREAM_ADMIN_API_KEY:api-key-has-admin-role}
      user-api-key: ${GATEWAY_DOWN_STREAM_USER_API_KEY:api-key-has-readonly-role}
