---
spring:
  cloud:
    gateway:
      routes:
        - id: downstream-api
          uri: ${app.iam.downstream.base-url}
          predicates:
            - Path=/downstream/**
          filters:
            - RewritePath=/downstream/(?<path>.*), /$\{path}
            - RemoveRequestHeader=Authorization
            - name: SetAPIKey
            - name: ResponseBodyTransformer
              args:
                specifications:
                  - http-method: PUT
                    http-path: /downstream/api/company/${app.iam.downstream.company.username}/ports/orders
                    resource-type: ORDER_PORT
                    response-data-path: $
                    transformer-chains:
                      - chain-name: RESOURCE_CREATE
                        options:
                          orderId: id
                  - http-method: GET
                    http-path: /downstream/api/company/${app.iam.downstream.company.username}/ports/orders
                    resource-type: ORDER_PORT
                    response-data-path: $.results
                    transformer-chains:
                      - chain-name: RESOURCES_LIST_AND_FILTER
                        after-transform-hooks:
                          - name: Sync resource's resourceId
                            id: SYNC_RESOURCE_ID
                            options:
                              orderId: id
                              resourceId: createdPortId
                        options:
                          filter: "#data.?[#orderIds.contains(id)]"
                  - http-method: GET
                    http-path: /downstream/api/company/${app.iam.downstream.company.username}/ports
                    transformer: RESOURCES_LIST_AND_FILTER
                    resource-type: ORDER_PORT
                    response-data-path: $.results
                    transformer-chains:
                      - chain-name: RESOURCES_LIST_AND_FILTER
                        options:
                          filter: "#data.?[#resourceIds.contains(id)]"
                  - when: "#customerType == 'CUSTOMER'"
                    http-method: GET
                    http-path: /downstream/api/company/${app.iam.downstream.company.username}/ports/{portId}/connections
                    resource-type: ORDER_PORT
                    response-data-path: $.results
                    transformer-chains:
                      - chain-name: RESOURCES_LIST_AND_FILTER
                        options:
                          filter: "#data.?[#resourceIds.contains(id)]"
                      - chain-name: RESOURCES_LIST_AND_MODIFY
                        options:
                          when: "#companyPartnerType == 'NONE'"
                          keysPath:
                            companyPartnerType: "destCompany.directConnectPartner.type"
                          modifier:
                            destCompany:
                              name: "#customerName"
                              company:
                                registeredName: "#customerName"


app:
  iam:
    resource-server:
      trusted-issuers:
        - issuer: https://vortex-mgmt.vortex-unit-test.com/
          secret: Indisputably-Engaging-Roadway-70
          mgmt: true
          user-id-prefix: auth0|
          default-roles:
            - PLATFORM_ADMIN
          default-org-id: 65a4f18aec61ae42ae9606dfx0000
        - issuer: https://vortex-customer.vortex-unit-test.com/
          secret: Indisputably-Engaging-Roadway-70
          default-roles:
            - ORG_MEMBER
          mgmt: false
    downstream:
      base-url: http://localhost:3031
      token: api-key-has-readonly-role
      company:
        id: 65a4f18aec61ae42ae9606dfx0000
        username: reseller-username
        admin-user-id: 5d773f33c7e294000b763af6
